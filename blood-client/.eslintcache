[{"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\index.js":"1","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\reportWebVitals.js":"2","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\App.js":"3","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\actions\\store.js":"4","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\components\\DCandidateForm.js":"5","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\components\\DCandidates.js":"6","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\reducers\\index.js":"7","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\reducers\\dCandidate.js":"8","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\actions\\dCandidate.js":"9","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\actions\\api.js":"10","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\components\\useForm.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":533,"mtime":1609363177503,"results":"15","hashOfConfig":"13"},{"size":321,"mtime":1609362815355,"results":"16","hashOfConfig":"13"},{"size":6058,"mtime":1609400903180,"results":"17","hashOfConfig":"13"},{"size":3955,"mtime":1609401077759,"results":"18","hashOfConfig":"13"},{"size":151,"mtime":1609362920692,"results":"19","hashOfConfig":"13"},{"size":802,"mtime":1609362904019,"results":"20","hashOfConfig":"13"},{"size":1466,"mtime":1609362785191,"results":"21","hashOfConfig":"13"},{"size":440,"mtime":1609362433539,"results":"22","hashOfConfig":"13"},{"size":733,"mtime":1609362879199,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1s8583x",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\index.js",[],["48","49"],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\reportWebVitals.js",[],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\App.js",[],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\actions\\store.js",[],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\components\\DCandidateForm.js",["50","51","52","53","54","55","56"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  withStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/dCandidate\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      minWidth: 230,\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 230,\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\nconst initialFieldValues = {\r\n  fullName: \"\",\r\n  mobile: \"\",\r\n  email: \"\",\r\n  age: \"\",\r\n  bloodGroup: \"\",\r\n  address: \"\",\r\n};\r\n\r\nconst DCandidateForm = ({ classes, ...props }) => {\r\n  //toast msg.\r\n  const { addToast } = useToasts();\r\n\r\n  //validate()\r\n  //validate({fullName:'jenny'})\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if (\"fullName\" in fieldValues)\r\n      temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\r\n    if (\"mobile\" in fieldValues)\r\n      temp.mobile = fieldValues.mobile ? \"\" : \"This field is required.\";\r\n    if (\"bloodGroup\" in fieldValues)\r\n      temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required.\";\r\n    if (\"email\" in fieldValues)\r\n      temp.email = /^$|.+@.+..+/.test(fieldValues.email)\r\n        ? \"\"\r\n        : \"Email is not valid.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues == values) return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n  } = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n  //material-ui select\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm();\r\n        addToast(\"Submitted successfully\", { appearance: \"success\" });\r\n      };\r\n      if (props.currentId == 0) props.createDCandidate(values, onSuccess);\r\n      else props.updateDCandidate(props.currentId, values, onSuccess);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.currentId != 0) {\r\n      setValues({\r\n        ...props.dCandidateList.find((x) => x.id == props.currentId),\r\n      });\r\n      setErrors({});\r\n    }\r\n  }, [props.currentId]);\r\n\r\n  return (\r\n    <form\r\n      autoComplete='off'\r\n      noValidate\r\n      className={classes.root}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            name='fullName'\r\n            variant='outlined'\r\n            label='Full Name'\r\n            value={values.fullName}\r\n            onChange={handleInputChange}\r\n            {...(errors.fullName && {\r\n              error: true,\r\n              helperText: errors.fullName,\r\n            })}\r\n          />\r\n          <TextField\r\n            name='email'\r\n            variant='outlined'\r\n            label='Email'\r\n            value={values.email}\r\n            onChange={handleInputChange}\r\n            {...(errors.email && { error: true, helperText: errors.email })}\r\n          />\r\n          <FormControl\r\n            variant='outlined'\r\n            className={classes.formControl}\r\n            {...(errors.bloodGroup && { error: true })}\r\n          >\r\n            <InputLabel ref={inputLabel}>Blood Group</InputLabel>\r\n            <Select\r\n              name='bloodGroup'\r\n              value={values.bloodGroup}\r\n              onChange={handleInputChange}\r\n              labelWidth={labelWidth}\r\n            >\r\n              <MenuItem value=''>Select Blood Group</MenuItem>\r\n              <MenuItem value='A+'>A +ve</MenuItem>\r\n              <MenuItem value='A-'>A -ve</MenuItem>\r\n              <MenuItem value='B+'>B +ve</MenuItem>\r\n              <MenuItem value='B-'>B -ve</MenuItem>\r\n              <MenuItem value='AB+'>AB +ve</MenuItem>\r\n              <MenuItem value='AB-'>AB -ve</MenuItem>\r\n              <MenuItem value='O+'>O +ve</MenuItem>\r\n              <MenuItem value='O-'>O -ve</MenuItem>\r\n            </Select>\r\n            {errors.bloodGroup && (\r\n              <FormHelperText>{errors.bloodGroup}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            name='mobile'\r\n            variant='outlined'\r\n            label='Mobile'\r\n            value={values.mobile}\r\n            onChange={handleInputChange}\r\n            {...(errors.mobile && { error: true, helperText: errors.mobile })}\r\n          />\r\n          <TextField\r\n            name='age'\r\n            variant='outlined'\r\n            label='Age'\r\n            value={values.age}\r\n            onChange={handleInputChange}\r\n          />\r\n          <TextField\r\n            name='address'\r\n            variant='outlined'\r\n            label='Address'\r\n            value={values.address}\r\n            onChange={handleInputChange}\r\n          />\r\n          <div>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              className={classes.smMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant='contained'\r\n              className={classes.smMargin}\r\n              onClick={resetForm}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dCandidateList: state.dCandidate.list,\r\n});\r\n\r\nconst mapActionToProps = {\r\n  createDCandidate: actions.create,\r\n  updateDCandidate: actions.update,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(DCandidateForm));\r\n","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\components\\DCandidates.js",["57"],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\reducers\\index.js",[],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\reducers\\dCandidate.js",["58","59"],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\actions\\dCandidate.js",[],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\actions\\api.js",["60"],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\components\\useForm.js",["61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":65,"column":21,"nodeType":"73","messageId":"74","endLine":65,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":65,"column":74,"nodeType":"73","messageId":"74","endLine":65,"endColumn":76},{"ruleId":"71","severity":1,"message":"72","line":91,"column":27,"nodeType":"73","messageId":"74","endLine":91,"endColumn":29},{"ruleId":"71","severity":1,"message":"75","line":97,"column":25,"nodeType":"73","messageId":"74","endLine":97,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":99,"column":50,"nodeType":"73","messageId":"74","endLine":99,"endColumn":52},{"ruleId":"76","severity":1,"message":"77","line":103,"column":6,"nodeType":"78","endLine":103,"endColumn":23,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":40,"column":6,"nodeType":"78","endLine":40,"endColumn":8,"suggestions":"81"},{"ruleId":"71","severity":1,"message":"72","line":24,"column":16,"nodeType":"73","messageId":"74","endLine":24,"endColumn":18},{"ruleId":"71","severity":1,"message":"75","line":31,"column":45,"nodeType":"73","messageId":"74","endLine":31,"endColumn":47},{"ruleId":"82","severity":1,"message":"83","line":5,"column":1,"nodeType":"84","endLine":15,"endColumn":3},{"ruleId":"67","severity":1,"message":"85","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"86","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.dCandidateList', 'setErrors', and 'setValues'. Either include them or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["90"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [props.currentId, props.dCandidateList, setErrors, setValues]",{"range":"95","text":"96"},"Update the dependencies array to be: [props]",{"range":"97","text":"98"},[2617,2634],"[props.currentId, props.dCandidateList, setErrors, setValues]",[915,917],"[props]"]