[{"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\index.js":"1","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\reportWebVitals.js":"2","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\App.js":"3","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\actions\\store.js":"4","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\components\\DCandidateForm.js":"5","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\components\\DCandidates.js":"6","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\reducers\\index.js":"7","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\reducers\\dCandidate.js":"8","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\actions\\dCandidate.js":"9","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\actions\\api.js":"10","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\components\\useForm.js":"11","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\i18n.js":"12"},{"size":500,"mtime":1609426685145,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":533,"mtime":1609426791373,"results":"16","hashOfConfig":"14"},{"size":321,"mtime":1609362815355,"results":"17","hashOfConfig":"14"},{"size":6339,"mtime":1609424975430,"results":"18","hashOfConfig":"14"},{"size":4344,"mtime":1609426873503,"results":"19","hashOfConfig":"14"},{"size":151,"mtime":1609362920692,"results":"20","hashOfConfig":"14"},{"size":802,"mtime":1609362904019,"results":"21","hashOfConfig":"14"},{"size":1466,"mtime":1609362785191,"results":"22","hashOfConfig":"14"},{"size":440,"mtime":1609362433539,"results":"23","hashOfConfig":"14"},{"size":733,"mtime":1609362879199,"results":"24","hashOfConfig":"14"},{"size":494,"mtime":1609425213247,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s8583x",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\index.js",[],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\reportWebVitals.js",[],["55","56"],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\App.js",[],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\actions\\store.js",[],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\components\\DCandidateForm.js",["57","58","59","60","61","62","63"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  withStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/dCandidate\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      minWidth: 230,\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 230,\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\nconst initialFieldValues = {\r\n  fullName: \"\",\r\n  mobile: \"\",\r\n  email: \"\",\r\n  age: \"\",\r\n  bloodGroup: \"\",\r\n  address: \"\",\r\n};\r\n\r\nconst DCandidateForm = ({ classes, ...props }) => {\r\n  //toast msg.\r\n  const { addToast } = useToasts();\r\n  const { t } = useTranslation();\r\n\r\n  //validate()\r\n  //validate({fullName:'jenny'})\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if (\"fullName\" in fieldValues)\r\n      temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\r\n    if (\"mobile\" in fieldValues)\r\n      temp.mobile = fieldValues.mobile ? \"\" : \"This field is required.\";\r\n    if (\"bloodGroup\" in fieldValues)\r\n      temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required.\";\r\n    if (\"email\" in fieldValues)\r\n      temp.email = /^$|.+@.+..+/.test(fieldValues.email)\r\n        ? \"\"\r\n        : \"Email is not valid.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues == values) return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n  } = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n  //material-ui select\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm();\r\n        addToast(\"Submitted successfully\", { appearance: \"success\" });\r\n      };\r\n      if (props.currentId == 0) props.createDCandidate(values, onSuccess);\r\n      else props.updateDCandidate(props.currentId, values, onSuccess);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.currentId != 0) {\r\n      setValues({\r\n        ...props.dCandidateList.find((x) => x.id == props.currentId),\r\n      });\r\n      setErrors({});\r\n    }\r\n  }, [props.currentId]);\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={classes.root}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name='fullName'\r\n              variant='outlined'\r\n              // label='Full Name'\r\n              label={t(\"FullName\")}\r\n              value={values.fullName}\r\n              onChange={handleInputChange}\r\n              {...(errors.fullName && {\r\n                error: true,\r\n                helperText: errors.fullName,\r\n              })}\r\n            />\r\n\r\n            <TextField\r\n              name='email'\r\n              variant='outlined'\r\n              label='Email'\r\n              value={values.email}\r\n              onChange={handleInputChange}\r\n              {...(errors.email && { error: true, helperText: errors.email })}\r\n            />\r\n\r\n            <FormControl\r\n              variant='outlined'\r\n              className={classes.formControl}\r\n              {...(errors.bloodGroup && { error: true })}\r\n            >\r\n              <InputLabel ref={inputLabel}>Blood Group</InputLabel>\r\n              <Select\r\n                name='bloodGroup'\r\n                value={values.bloodGroup}\r\n                onChange={handleInputChange}\r\n                labelWidth={labelWidth}\r\n              >\r\n                <MenuItem value=''>Select Blood Group</MenuItem>\r\n                <MenuItem value='A+'>A+ </MenuItem>\r\n                <MenuItem value='A-'>A- </MenuItem>\r\n                <MenuItem value='B+'>B+ </MenuItem>\r\n                <MenuItem value='B-'>B- </MenuItem>\r\n                <MenuItem value='AB+'>AB+ </MenuItem>\r\n                <MenuItem value='AB-'>AB- </MenuItem>\r\n                <MenuItem value='O+'>O+ </MenuItem>\r\n                <MenuItem value='O-'>O- </MenuItem>\r\n              </Select>\r\n              {errors.bloodGroup && (\r\n                <FormHelperText>{errors.bloodGroup}</FormHelperText>\r\n              )}\r\n            </FormControl>\r\n            <TextField\r\n              name='mobile'\r\n              variant='outlined'\r\n              label='Mobile'\r\n              value={values.mobile}\r\n              onChange={handleInputChange}\r\n              {...(errors.mobile && { error: true, helperText: errors.mobile })}\r\n            />\r\n            <TextField\r\n              name='age'\r\n              variant='outlined'\r\n              label='Age'\r\n              value={values.age}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              name='address'\r\n              variant='outlined'\r\n              label='Address'\r\n              value={values.address}\r\n              onChange={handleInputChange}\r\n            />\r\n            <div>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                type='submit'\r\n                className={classes.smMargin}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                variant='contained'\r\n                className={classes.smMargin}\r\n                onClick={resetForm}\r\n              >\r\n                Reset\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dCandidateList: state.dCandidate.list,\r\n});\r\n\r\nconst mapActionToProps = {\r\n  createDCandidate: actions.create,\r\n  updateDCandidate: actions.update,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(DCandidateForm));\r\n","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\components\\DCandidates.js",["64","65"],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\reducers\\index.js",[],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\reducers\\dCandidate.js",["66","67"],"import { ACTION_TYPES } from \"../actions/dCandidate\";\r\nconst initialState = {\r\n  list: [],\r\n};\r\n\r\nexport const dCandidate = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload],\r\n      };\r\n\r\n    case ACTION_TYPES.CREATE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload],\r\n      };\r\n\r\n    case ACTION_TYPES.UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map((x) =>\r\n          x.id == action.payload.id ? action.payload : x\r\n        ),\r\n      };\r\n\r\n    case ACTION_TYPES.DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((x) => x.id != action.payload),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\actions\\dCandidate.js",[],"C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\actions\\api.js",["68"],"import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:64307/api/\";\r\n\r\nexport default {\r\n  dCandidate(url = baseUrl + \"dcandidate/\") {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: (id) => axios.get(url + id),\r\n      create: (newRecord) => axios.post(url, newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n    };\r\n  },\r\n};\r\n","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\components\\useForm.js",["69","70"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\r\n  const [values, setValues] = useState(initialFieldValues);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    const fieldValue = { [name]: value };\r\n    setValues({\r\n      ...values,\r\n      ...fieldValue,\r\n    });\r\n    validate(fieldValue);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues({\r\n      ...initialFieldValues,\r\n    });\r\n    setErrors({});\r\n    setCurrentId(0);\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","C:\\Users\\Ahmed\\Desktop\\BloodBank\\blood-client\\src\\i18n.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":67,"column":21,"nodeType":"81","messageId":"82","endLine":67,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":67,"column":74,"nodeType":"81","messageId":"82","endLine":67,"endColumn":76},{"ruleId":"79","severity":1,"message":"80","line":93,"column":27,"nodeType":"81","messageId":"82","endLine":93,"endColumn":29},{"ruleId":"79","severity":1,"message":"83","line":99,"column":25,"nodeType":"81","messageId":"82","endLine":99,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":101,"column":50,"nodeType":"81","messageId":"82","endLine":101,"endColumn":52},{"ruleId":"84","severity":1,"message":"85","line":105,"column":6,"nodeType":"86","endLine":105,"endColumn":23,"suggestions":"87"},{"ruleId":"75","severity":1,"message":"88","line":9,"column":3,"nodeType":"77","messageId":"78","endLine":9,"endColumn":8},{"ruleId":"84","severity":1,"message":"89","line":48,"column":6,"nodeType":"86","endLine":48,"endColumn":8,"suggestions":"90"},{"ruleId":"79","severity":1,"message":"80","line":24,"column":16,"nodeType":"81","messageId":"82","endLine":24,"endColumn":18},{"ruleId":"79","severity":1,"message":"83","line":31,"column":45,"nodeType":"81","messageId":"82","endLine":31,"endColumn":47},{"ruleId":"91","severity":1,"message":"92","line":5,"column":1,"nodeType":"93","endLine":15,"endColumn":3},{"ruleId":"75","severity":1,"message":"94","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"95","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.dCandidateList', 'setErrors', and 'setValues'. Either include them or remove the dependency array.","ArrayExpression",["98"],"'Table' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["99"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [props.currentId, props.dCandidateList, setErrors, setValues]",{"range":"104","text":"105"},"Update the dependencies array to be: [props]",{"range":"106","text":"107"},[2701,2718],"[props.currentId, props.dCandidateList, setErrors, setValues]",[1079,1081],"[props]"]